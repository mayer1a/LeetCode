name: iOS starter workflow

on:
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    name: Build and Test default
    permissions:
      contents: read
      pull-requests: write
    runs-on: self-hosted

    steps:
      - name: Labeler
        id: label-the-PR
        uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Schemes
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          targets=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets']" | grep -oE 'LeetCode[0-9]{0,2}\b')
          echo $targets | cat >targets
          echo The following schemes will be used: [$targets].
      - name: Build
        env:
          schemes: ${{ 'targets' }}
          platform: ${{ 'OS X' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'MacBook' | head -1 | awk '{$1=$1;print}'`

          if [ $schemes = targets ]; then schemes=$(cat targets); fi

          for scheme in $schemes
          do
            echo \nScheme used: [$scheme]\n
            if [ "`ls -A | grep -i \\.xcworkspace\$`" ]
              then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
              else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
            fi
            file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
            xcodebuild build-for-testing -scheme "$scheme" -$filetype_parameter "$file_to_build" -destination "platform=$platform,name=$device,arch=arm64"
            echo "** TEST BUILD SUCCEEDED for $scheme scheme **"
          done
      - name: Unit Test
        env:
          schemes: ${{ 'targets' }}
          platform: ${{ 'OS X' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'MacBook' | head -1 | awk '{$1=$1;print}'`

          if [ $schemes = targets ]; then schemes=$(cat targets); fi

          for scheme in $schemes
          do
            echo "\nScheme used: [$scheme]\n"
            if [ "`ls -A | grep -i \\.xcworkspace\$`" ]
              then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
              else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
            fi
            file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
            xcodebuild test-without-building -scheme "$scheme" -$filetype_parameter "$file_to_build" -destination "platform=$platform,name=$device,arch=arm64"
          done
